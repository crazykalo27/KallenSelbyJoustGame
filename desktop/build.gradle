apply plugin: "java-library"
apply plugin: "application"

mainClassName = "com.joust.desktop.DesktopLauncher"
eclipse.project.name = appName + "-desktop"
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

dependencies {
    implementation project(":core")
    api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
}

run {
    workingDir = rootProject.file('assets')
    setIgnoreExitValue(true)
    
    if (org.gradle.internal.os.OperatingSystem.current() == org.gradle.internal.os.OperatingSystem.MAC_OS) {
        // Required to run on macOS
        jvmArgs += "-XstartOnFirstThread"
    }
}

jar {
    archiveFileName = "${appName}-desktop.jar"
    dependsOn configurations.runtimeClasspath
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    
    manifest {
        attributes 'Main-Class': mainClassName
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

task debug(type: JavaExec) {
    dependsOn classes
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = rootProject.file('assets')
    ignoreExitValue = true

    if (org.gradle.internal.os.OperatingSystem.current() == org.gradle.internal.os.OperatingSystem.MAC_OS) {
        jvmArgs += "-XstartOnFirstThread"
    }
}

task dist(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest.attributes 'Main-Class': mainClassName
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
} 