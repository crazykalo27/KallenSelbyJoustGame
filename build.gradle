buildscript {
    repositories {
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'org.docstr:gwt-gradle-plugin:1.1.31'
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '0.0.1-SNAPSHOT'
    ext {
        appName = "JoustGameLibGDX"
        gdxVersion = '1.12.1'
        roboVMVersion = '2.3.19'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

// Legacy Swing version (for comparison/testing)
project(':legacy-swing') {
    apply plugin: 'java'
    
    dependencies {
        // Core Java libraries for legacy code
        implementation 'org.apache.commons:commons-lang3:3.12.0'
        
        // Test dependencies
        testImplementation 'junit:junit:4.13.2'
        testImplementation 'org.hamcrest:hamcrest-core:1.3'
    }

    jar {
        manifest {
            attributes(
                'Main-Class': 'mainApp.MainApp'
            )
        }
        
        // Include all dependencies in the JAR (fat JAR)
        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }
        
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
    
    // Task for web deployment preparation (for legacy swing version)
    task prepareWebDeploy(type: Copy) {
        dependsOn jar
        
        from jar.archiveFile
        from 'src/main/resources/levels'
        from 'src/main/resources/images'
        
        into 'docs'
        
        rename { filename ->
            if (filename.endsWith('.jar')) {
                return 'JoustGame.jar'
            }
            return filename
        }
    }
    
    // Task for creating GitHub Pages deployment
    task deployToGitHubPages {
        dependsOn prepareWebDeploy
        
        doLast {
            println "==================================="
            println "ðŸš€ Web Deployment Prepared!"
            println "==================================="
            println "Next steps for GitHub Pages:"
            println "1. git add docs/"
            println "2. git commit -m 'Update web deployment'"
            println "3. git push origin main"
            println "==================================="
        }
    }
}

// Configure wrapper task for proper Gradle wrapper generation
wrapper {
    gradleVersion = '8.5'
    distributionType = Wrapper.DistributionType.ALL
}

// LibGDX Core module
project(':core') {
    apply plugin: "java-library"

    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
    }
    
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

// LibGDX Desktop module  
project(':desktop') {
    apply plugin: "java-library"

    dependencies {
        implementation project(':core')
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
    }
    
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

// LibGDX HTML/GWT module for web deployment
project(':html') {
    apply plugin: "java-library"
    apply plugin: "gwt"
    apply plugin: "war"

    dependencies {
        implementation project(':core')
        api "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
        api "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
        api "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion:sources"
        api "com.badlogicgames.gdx:gdx-box2d-gwt:$gdxVersion:sources"
        api "com.badlogicgames.gdx:gdx-ai:$aiVersion:sources"
        api "com.badlogicgames.ashley:ashley:$ashleyVersion:sources"
        api "com.badlogicgames.box2dlights:box2dlights:$box2DLightsVersion:sources"
    }
} 